import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.library'
//apply plugin: 'com.github.dcendents.android-maven'

group='com.github.seven332'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 13
        versionName "0.1.12"

        externalNativeBuild {
            cmake {
                targets "image"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path 'src/main/jni/CMakeLists.txt'
        }
    }
    ndkVersion '27.0.12077973'
}

clean {
    delete file('src/main/obj').absolutePath
    delete file('src/main/libs').absolutePath
}

task javah(type: Exec, dependsOn: 'compileReleaseJavaWithJavac') {
    char separator = Os.isFamily(Os.FAMILY_WINDOWS) ? ';' : ':'
    commandLine 'javah', '-jni',
            '-d', 'javah',
            '-cp', "${android.getSdkDirectory().getAbsolutePath()}/platforms/android-28/android.jar${separator}build/intermediates/javac/release/classes",
            'com.hippo.image.Image'
}

project.afterEvaluate {
    externalNativeBuildDebug.dependsOn javah
    externalNativeBuildRelease.dependsOn javah
}

dependencies {
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'com.getkeepsafe.relinker:relinker:1.4.4'
    testImplementation 'junit:junit:4.12'
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
